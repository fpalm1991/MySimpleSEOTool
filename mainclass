class WebsiteSEO:
    def __init__(self, URLS):
        self.URLS = URLS
        self.REQUESTS = []
        self.SOUPS = []
        self.PTAGSARRAY = []
        self.LITAGTEXT = ""
        self.METATITLES = []
        self.METADESCRIPTIONS = []
        self.HTAGS = {
            'h1' : [],
            'h2' : [],
            'h3' : [],
            'h4' : [],
            'h5' : [],
            'h6' : [],
        }
        self.H1TAGS = []
        # Get requests
        for url in self.URLS:
            r = requests.get(url)
            self.REQUESTS.append(r)
        # Get soup
        for request in self.REQUESTS:
            s = BeautifulSoup(request.text, features="html.parser")
            self.SOUPS.append(s)
    
    def setAdditionalURLs(self, URLS):
        for url in URLS:
            self.URLS.append(url)
            
    def getCurrentURLs(self):
        for url in self.URLS:
            print(url)
            
    def getPTags(self):
        for soup in self.SOUPS:
            for pTag in soup.find_all('p'):
                self.PTAGSARRAY.append(pTag.text.strip())
        return self.PTAGSARRAY
            
    def getMetaTitles(self):
        for soup in self.SOUPS:
            for metaTitle in soup.find_all('title'):
                self.METATITLES.append(metaTitle.string)
        return self.METATITLES
    
    def getMetaDescriptions(self):
        for soup in self.SOUPS:
            for metaDescription in soup.find_all('meta', attrs={'name':'description'}):
                self.METADESCRIPTIONS.append(metaDescription['content'])
        return self.METADESCRIPTIONS
    
    def getAllHTags(self):
        hCounter = 1
        for soup in self.SOUPS:
            while hCounter < 7:
                hTag = 'h' + str(hCounter)
                for hTagOnPage in soup.find_all(hTag):
                    self.HTAGS[hTag].append(hTagOnPage.text)
                hCounter += 1
        return self.HTAGS
    
    def getH1Tags(self):
        for soup in self.SOUPS:
            for h1TagOnPage in soup.find_all('h1'):
                self.H1TAGS.append(h1TagOnPage.text)
        return self.H1TAGS
                
    def getLiTexts(self):
        for soup in self.SOUPS:
            for liText in soup.find_all('li'):
                try:
                    self.LITAGTEXT += (liText.text.strip() + " ")
                except TypeError:
                    pass
        return self.LITAGTEXT
    
